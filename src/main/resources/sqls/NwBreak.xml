<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.kr.airport.nwbreak.dao.NwBreakDao">

	<!-- 글 목록 조회 -->
	<select id="getNwBreakSearchPageList" parameterType="co.kr.airport.nwbreak.dto.param.NwBreakListParam"
		resultType="co.kr.airport.nwbreak.domain.NwBreak">
		SELECT rnum, break_id, line_Id, facility_ground, facility_name, 
		break_Time, recovery_Time, fail_Time, break_manager, break_reason
		FROM
					(SELECT row_number() OVER(ORDER BY break_Time DESC) AS rnum,
					break_id, line_Id, facility_ground, facility_name, 
					break_Time, recovery_Time, fail_time, break_manager, break_reason
					FROM NW_BREAK
					<if test="choice != null and choice != ''
								and search != null and search != '' ">
						<if test="choice == 'lineId'">
							WHERE line_Id LIKE concat('%', #{search}, '%')
						</if>
						<if test="choice == 'breakId'">
							WHERE break_id LIKE concat('%', #{search}, '%')
						</if>
					</if>
					ORDER BY break_Time DESC) a
		WHERE rnum BETWEEN ${pageStart} AND ${pageEnd}
	</select>

	<!-- 글 총 개수 조회 -->
	<select id="getNwBreakCount" parameterType="co.kr.airport.nwbreak.dto.param.NwBreakCountParam" resultType="Integer">

		SELECT ifnull(count(*), 0)
		FROM NW_BREAK
		<if test="choice != null and choice != ''
		 			and search != null and search != '' ">
			<if test="choice == 'lineId'">
				WHERE line_Id LIKE concat('%', #{search}, '%')
			</if>
			<if test="choice == 'breakId'">
				WHERE BREAK_ID LIKE concat('%', #{search}, '%')
			</if>
		</if>
	</select>

	<!-- 특정 게시글 조회 -->
	<select id="getNwBreak" parameterType="Integer" resultType="co.kr.airport.nwbreak.domain.NwBreak">
		SELECT break_Id, line_Id, facility_ground, facility_name, 
		break_Time, recovery_Time, fail_time, break_manager, break_reason, (select name from member where id=writer) as writer
		FROM NW_BREAK
		WHERE break_id=#{breakId}
	</select>

	<!-- 게시글 조회수 레코드 생성 -->
	<insert id="createBbsReadCountHistory" parameterType="co.kr.airport.bbs.dto.param.CreateReadCountParam">
		INSERT INTO read_history (bbs_seq, id, latest_access_at) VALUES (#{bbsSeq}, #{readerId}, NOW())
		ON DUPLICATE KEY
		UPDATE latest_access_at=NOW();
	</insert>

	<!-- 게시글 조회수 수정 -->
	<update id="increaseBbsReadCount" parameterType="Integer">
		UPDATE bbs
		SET read_count = read_count + 1
		WHERE seq = #{seq}
	</update>

	<!-- 게시글 작성 -->
	<insert id="createNwBreak" parameterType="co.kr.airport.nwbreak.dto.param.CreateNwBreakParam">
		INSERT NW_BREAK (LINE_ID, FACILITY_GROUND, FACILITY_NAME, BREAK_TIME, RECOVERY_TIME, FAIL_TIME, BREAK_MANAGER, BREAK_REASON, WRITER) 
		VALUES (#{lineId}, #{facilityGround}, #{facilityName} ,#{breakTime}, #{recoveryTime}, #{failTime}, #{breakManager}, #{breakReason}, #{writer})
	</insert>

	<!-- 답글 작성 -->
	<!-- 부모 게시글 step 업데이트 -->
	<update id="updateBbsStep" parameterType="Integer">
		UPDATE bbs
		SET step = step + 1
		WHERE ref = (SELECT ref FROM (SELECT ref FROM bbs a WHERE seq=#{parentSeq}) A)
		AND step > (SELECT step FROM (SELECT step FROM bbs b WHERE seq=#{parentSeq}) B)
	</update>

	<!-- 부모 게시글 하위 답글 개수 조회 (step 업데이트 성공 여부 확인 휘함) -->
	<select id="getBbsAnswerCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*)
		FROM bbs
		WHERE ref = (SELECT ref FROM (SELECT ref FROM bbs a WHERE seq=#{parentSeq}) A)
		AND step > (SELECT step FROM (SELECT step FROM bbs b WHERE seq=#{parentSeq}) B)
	</select>

	<!-- 새로운 답글 추가 -->
	<insert id="createBbsAnswer" parameterType="co.kr.airport.bbs.dto.param.CreateBbsAnswerParam"
					useGeneratedKeys="true" keyProperty="seq">
		INSERT INTO bbs (id, ref, step, depth, title, content, created_at, del, read_count)
		VALUES (#{id}, (SELECT ref FROM bbs a WHERE seq=#{parentSeq}),
		        		(SELECT step FROM bbs b WHERE seq=#{parentSeq}) + 1,
		       			(SELECT depth FROM bbs c WHERE seq=#{parentSeq}) + 1,
		       			#{title}, #{content}, NOW(), 0, 0);
	</insert>

	<!-- 게시글 수정 -->
	<!-- 수정 성공 시 1(수정한 레코드 개수) 을 반환, 실패 시 0 을 반환 -->
	<update id="updateBbs" parameterType="co.kr.airport.bbs.dto.param.UpdateBbsParam">

		UPDATE bbs
		SET content=#{content}, title=#{title}
		WHERE seq=#{seq}

	</update>

	<update id="deleteBbs" parameterType="Integer">
		UPDATE bbs
		SET del = 1
		WHERE seq=#{seq}
	</update>
	
	
	<!-- 차트 조회 -->
	<select id="getChart" parameterType="co.kr.airport.nwbreak.dto.param.ChartParam" resultType="co.kr.airport.nwbreak.domain.Chart">
		SELECT COUNT(*) break_count, line_id, facility_ground, facility_name, SUM(fail_time) fail_time_total
		FROM nw_break
		WHERE 
		break_time 	&gt;= #{start}
		AND break_time &lt;= #{end}
		GROUP BY line_id	
	</select>
	
	

</mapper>



